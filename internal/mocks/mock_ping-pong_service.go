// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/eneskzlcn/ping-pong/internal/ping-pong (interfaces: PingPongService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	ping_pong "github.com/eneskzlcn/ping-pong/internal/ping-pong"
	gomock "github.com/golang/mock/gomock"
)

// MockPingPongService is a mock of PingPongService interface.
type MockPingPongService struct {
	ctrl     *gomock.Controller
	recorder *MockPingPongServiceMockRecorder
}

// MockPingPongServiceMockRecorder is the mock recorder for MockPingPongService.
type MockPingPongServiceMockRecorder struct {
	mock *MockPingPongService
}

// NewMockPingPongService creates a new mock instance.
func NewMockPingPongService(ctrl *gomock.Controller) *MockPingPongService {
	mock := &MockPingPongService{ctrl: ctrl}
	mock.recorder = &MockPingPongServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPingPongService) EXPECT() *MockPingPongServiceMockRecorder {
	return m.recorder
}

// Ping mocks base method.
func (m *MockPingPongService) Ping(arg0 ping_pong.PingRequest) (ping_pong.PongResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping", arg0)
	ret0, _ := ret[0].(ping_pong.PongResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Ping indicates an expected call of Ping.
func (mr *MockPingPongServiceMockRecorder) Ping(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockPingPongService)(nil).Ping), arg0)
}
